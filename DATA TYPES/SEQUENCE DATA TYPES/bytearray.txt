			====================================================
							3. bytearray
			====================================================
Properties 
------------------
=>'bytearray' is one of the pre-defined class name and treated as Sequence Data Type.
=>The purpose of bytearray data type is that "To organize the Numerical Integer values ranges from (0,256) for the implementation of End-to-End Encryption".
=>bytearray data type does not contains any symbolic notations for organizing (0,256) data. But we can convert any type of Value(s) into bytearray type by using bytearray()
=>Syntax:   varname=bytearray(object)
=>An object of bytearray belongs to mutable bcoz bytearray object  supports Item Assignment.
=>On the object of bytearray, we can perform both Indexing and Slicing Operations.
=>An object of bytearray maintains Insertion Order (Which is nothing but, whatever the order we insert the data, In the same order data will be displayed).
--------------------------------------------------------------------------------------------------------------------------------------------
NOTE: The Functionality of bytes and bytearray are exactly same but bytes object belongs to Immutable bcoz bytes object does not support Item ` where bytearray object blongs to Mutable bcoz bytearray object supports Item Assigment.
--------------------------------------------------------------------------------------------------------------------------------------------
Examples:
--------------------------------------------------------------------------------------------------------------------------------------------
>>> tpl=(10,34,56,100,256,0,102)
>>> print(tpl,type(tpl))-----------------(10, 34, 56, 100, 256, 0, 102) <class 'tuple'>
>>> ba=bytearray(tpl)--------------------ValueError: byte must be in range(0, 256)
>>> tpl=(-10,34,56,100,255,0,102)
>>> print(tpl,type(tpl))-------(-10, 34, 56, 100, 255, 0, 102) <class 'tuple'>
>>> ba=bytearray(tpl)-------------ValueError: byte must be in range(0, 256)
-------------------------
>>> tpl=(10,34,56,100,255,0,102)
>>> print(tpl,type(tpl))------------(10, 34, 56, 100, 255, 0, 102) <class 'tuple'>
>>> ba=bytearray(tpl)
>>> print(ba,type(ba))------------bytearray(b'\n"8d\xff\x00f') <class 'bytearray'>
-------------------------------
>>> tpl=(10,34,56,100,255,0,102)
>>> print(tpl,type(tpl))-----------------(10, 34, 56, 100, 255, 0, 102) <class 'tuple'>
>>> ba=bytearray(tpl)
>>> print(ba,type(ba))---------------------bytearray(b'\n"8d\xff\x00f') <class 'bytearray'>
>>> for val in ba:
...     print(val)
...
			10
			34
			56
			100
			255
			0
			102
>>> for val in ba[::-1]:
...     print(val)
...
			102
			0
			255
			100
			56
			34
			10
>>> for val in ba:
...     print(val)
...
			10
			34
			56
			100
			255
			0
			102
>>> print(ba,type(ba),id(ba))---------bytearray(b'\n"8d\xff\x00f') <class 'bytearray'> 2149788291504
>>> ba[0]--------------10
>>> ba[-1]------------102
>>> ba[0]=123 # Updating / item assoigment on bytearray object--allowed
>>> for val in ba:
...     print(val)
...
			123
			34
			56
			100
			255
			0
			102
>>> print(ba,type(ba),id(ba))-----bytearray(b'{"8d\xff\x00f') <class 'bytearray'> 2149788291504
------------------------------------------
>>> b=bytes(ba) # Converting bytearray into bytes
>>> print(b,type(b))---------------b'{"8d\xff\x00f' <class 'bytes'>
>>> for val in b:
...     print(val)
...
			123
			34
			56
			100
			255
			0
			102
>>> b[0]---------------------123
>>> b[0]=12------TypeError: 'bytes' object does not support item assignment
>>> x=bytearray(b) # Converting bytes into bytearray
>>> print(x,type(x),id(x))----bytearray(b'{"8d\xff\x00f') <class 'bytearray'> 2149788291888
>>> for v in x:
...     print(v)
...
			123
			34
			56
			100
			255
			0
			102
>>> x[1]----------------------34
>>> x[1]=234
>>> for v in x:
...     print(v)
...
			123
			234
			56
			100
			255
			0
			102
>>> print(x,type(x),id(x))-----bytearray(b'{\xea8d\xff\x00f') <class 'bytearray'> 2149788291888
--------------------------------------------------------------------------------------------------------------------------------------------
